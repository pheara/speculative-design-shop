{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Route.svelte",
    "..\\..\\Router.svelte",
    "..\\..\\App.svelte",
    "..\\..\\Gallery.svelte",
    "..\\..\\MainDescription.svelte",
    "..\\..\\ProductCard.svelte",
    "..\\..\\ProductCardRow.svelte",
    "..\\..\\StarRating.svelte"
  ],
  "sourcesContent": [
    "<script context=\"module\">\n  import { writable } from 'svelte/store';\n  import { routeInfo } from './router';\n  import {\n    CTX_ROUTER, CTX_ROUTE, getProps, isPromise, isSvelteComponent,\n  } from './utils';\n</script>\n\n<script>\n  import { onDestroy, getContext, setContext } from 'svelte';\n\n  export let key = null;\n  export let path = '/';\n  export let exact = null;\n  export let pending = null;\n  export let disabled = false;\n  export let fallback = null;\n  export let component = null;\n  export let condition = null;\n  export let redirect = null;\n\n  // replacement for `Object.keys(arguments[0].$$.props)`\n  const thisProps = ['key', 'path', 'exact', 'pending', 'disabled', 'fallback', 'component', 'condition', 'redirect'];\n\n  const routeContext = getContext(CTX_ROUTE);\n  const routerContext = getContext(CTX_ROUTER);\n\n  const { assignRoute, unassignRoute } = routerContext || {};\n\n  const routePath = routeContext ? routeContext.routePath : writable(path);\n\n  let activeRouter = null;\n  let activeProps = {};\n  let fullpath;\n  let failure;\n  let hasLoaded;\n\n  const fixedRoot = $routePath !== path && $routePath !== '/'\n    ? `${$routePath}${path !== '/' ? path : ''}`\n    : path;\n\n  try {\n    if (redirect !== null && !/^(?:\\w+:\\/\\/|\\/)/.test(redirect)) {\n      throw new TypeError(`Expecting valid URL to redirect, given '${redirect}'`);\n    }\n\n    if (condition !== null && typeof condition !== 'function') {\n      throw new TypeError(`Expecting condition to be a function, given '${condition}'`);\n    }\n\n    if (path.charAt() !== '#' && path.charAt() !== '/') {\n      throw new TypeError(`Expecting a leading slash or hash, given '${path}'`);\n    }\n\n    if (!assignRoute) {\n      throw new TypeError(`Missing top-level <Router>, given route: ${path}`);\n    }\n\n    const fixedRoute = path !== fixedRoot && fixedRoot.substr(-1) !== '/'\n      ? `${fixedRoot}/`\n      : fixedRoot;\n\n    [key, fullpath] = assignRoute(key, fixedRoute, {\n      condition, redirect, fallback, exact,\n    });\n  } catch (e) {\n    failure = e;\n  }\n\n  $: if (key) {\n    activeRouter = !disabled && $routeInfo[key];\n    activeProps = getProps($$props, thisProps);\n  }\n\n  $: if (activeRouter) {\n    if (!component) { // component passed as slot\n      hasLoaded = true;\n    } else if (isSvelteComponent(component)) { // component passed as Svelte component\n      hasLoaded = true;\n    } else if (isPromise(component)) { // component passed as import()\n      component.then(module => {\n        component = module.default;\n        hasLoaded = true;\n      });\n    } else { // component passed as () => import()\n      component().then(module => {\n        component = module.default;\n        hasLoaded = true;\n      });\n    }\n  }\n\n  onDestroy(() => {\n    if (unassignRoute) {\n      unassignRoute(fullpath);\n    }\n  });\n\n  setContext(CTX_ROUTE, {\n    routePath,\n  });\n</script>\n\n<style>\n  [data-failure] {\n    color: red;\n  }\n</style>\n\n{#if failure}\n  <p data-failure>{failure}</p>\n{/if}\n\n{#if activeRouter}\n  {#if !hasLoaded}\n    {#if pending}\n      {#if isSvelteComponent(pending)}\n        <svelte:component this={pending} router={activeRouter} {...activeProps} />\n      {:else}\n        {pending}\n      {/if}\n    {/if}\n  {:else}\n    {#if component}\n      <svelte:component this={component} router={activeRouter} {...activeProps} />\n    {:else}\n      <slot router={activeRouter} props={activeProps} />\n    {/if}\n  {/if}\n{/if}\n",
    "<script context=\"module\">\n  import { writable } from 'svelte/store';\n  import { CTX_ROUTER, router } from './utils';\n  import {\n    baseRouter, addRouter, findRoutes, doFallback,\n  } from './router';\n</script>\n\n<script>\n  import {\n    onMount, onDestroy, getContext, setContext,\n  } from 'svelte';\n\n  let cleanup;\n  let failure;\n  let fallback;\n\n  export let path = '/';\n  export let disabled = false;\n  export let condition = null;\n  export let nofallback = false;\n\n  const routerContext = getContext(CTX_ROUTER);\n  const basePath = routerContext ? routerContext.basePath : writable(path);\n\n  const fixedRoot = $basePath !== path && $basePath !== '/'\n    ? `${$basePath}${path !== '/' ? path : ''}`\n    : path;\n\n  try {\n    if (condition !== null && typeof condition !== 'function') {\n      throw new TypeError(`Expecting condition to be a function, given '${condition}'`);\n    }\n\n    if (path.charAt() !== '#' && path.charAt() !== '/') {\n      throw new TypeError(`Expecting a leading slash or hash, given '${path}'`);\n    }\n  } catch (e) {\n    failure = e;\n  }\n\n  function assignRoute(key, route, detail) {\n    key = key || Math.random().toString(36).substr(2);\n\n    // consider as nested routes if they does not have any segment\n    const nested = !route.substr(1).includes('/');\n    const handler = { key, nested, ...detail };\n\n    let fullpath;\n\n    baseRouter.mount(fixedRoot, () => {\n      fullpath = baseRouter.add(route, handler);\n      fallback = (handler.fallback && key) || fallback;\n    });\n\n    findRoutes();\n\n    return [key, fullpath];\n  }\n\n  function unassignRoute(route) {\n    try {\n      baseRouter.rm(route);\n    } catch (e) {\n      // ðŸ”¥ this is fine...\n    }\n    findRoutes();\n  }\n\n  function onError(err) {\n    failure = err;\n\n    if (failure && fallback) {\n      doFallback(failure, fallback);\n    }\n  }\n\n  onMount(() => {\n    cleanup = addRouter(fixedRoot, fallback, onError);\n  });\n\n  onDestroy(() => {\n    if (cleanup) cleanup();\n  });\n\n  setContext(CTX_ROUTER, {\n    basePath,\n    assignRoute,\n    unassignRoute,\n  });\n\n  $: if (condition) {\n    disabled = !condition($router);\n  }\n</script>\n\n<style>\n  [data-failure] {\n    border: 1px dashed silver;\n  }\n</style>\n\n{#if !disabled}\n  <slot />\n{/if}\n\n{#if failure && !fallback && !nofallback}\n  <fieldset data-failure>\n    <legend>Router failure: {path}</legend>\n    <pre>{failure}</pre>\n  </fieldset>\n{/if}\n",
    "<script>\n  import 'bulma/css/bulma.css'\n  //   import '@fortawesome/fontawesome-free/css/all.css'\n  //   import { Button } from 'svelma'\n  //   import Button from 'svelma/src/components/Button.svelte'\n\n  import { Router, Link, Route, router } from 'yrv'\n  Router.hashchange = true //enable hash-based routing\n  //   router.hashchange = true //enable hash-based routing\n  //   export let url = ''\n\n  import Gallery from './Gallery.svelte'\n  import MainDescription from './MainDescription.svelte'\n  import Navbar from './Navbar.svelte'\n  import CheckoutBox from './CheckoutBox.svelte'\n  import ProductCard from './ProductCard.svelte'\n  import ProductCardRow from './ProductCardRow.svelte'\n\n  import ProductPage from './ProductPage.svelte'\n\n  import { products } from './data.js'\n  //   const product = products[Object.keys(products)[0]] // just use first product for now\n  const product = products['0ac55dd3']\n  const productImages = product.images\n\n  window.location.hash // e.g. #product/abc123\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<Navbar />\n\n<!-- <Link href=\"/\">Home</Link>\n|\n<Link href=\"/World\">Hello</Link>\n|\n<Link href=\"/not/found\">NotFound</Link> -->\n\n<main>\n\n  <Router>\n    <!-- <Route exact>Hello World</Route> -->\n    <Route exact redirect=\"/0ac55dd3\" />\n    <Route fallback>Product not found</Route>\n    <Route exact path=\"/:id\" let:router>\n      <ProductPage id={router.params.id} />\n    </Route>\n  </Router>\n\n</main>\n",
    "<script>\n  let clazz = ''\n  export { clazz as class }\n\n  export let productImages = []\n  let selected = undefined\n  function select(img) {\n    selected = img\n  }\n  $: {\n    if (!productImages || productImages.length === 0) {\n      select(undefined)\n    } else if (!selected || productImages.indexOf(selected) < 0) {\n      // no pic selected yet or selected not among product images anymore\n      select(productImages[0])\n    }\n  }\n</script>\n\n<style>\n  .gallery {\n    display: flex;\n    flex-direction: column;\n  }\n  .thumbs {\n    margin-top: 0.25rem;\n\n    display: grid;\n    grid-template-columns: [col1-start] 1fr 1fr 1fr 1fr [lastcol-end];\n    grid-template-rows: 1fr;\n    grid-column-gap: 0.25rem;\n    grid-row-gap: 0.25rem;\n  }\n\n  .thumb {\n    border: 1px solid grey;\n  }\n  .thumb.is-selected {\n    border-color: #00d1b2; /*primary*/\n    border-width: 2px;\n  }\n</style>\n\n<div class=\"gallery {clazz}\">\n  {#if selected}\n    <img class=\"largeImg\" src={selected.src} alt={selected.alt} />\n  {/if}\n  <div class=\"thumbs\">\n\n    {#each productImages as img}\n      <figure\n        class=\"thumb image {img === selected ? 'is-selected' : ''}\"\n        on:click={() => select(img)}>\n        <img src={img.src} alt={img.alt} />\n      </figure>\n    {/each}\n  </div>\n</div>\n",
    "<script>\n  let clazz = ''\n  export { clazz as class }\n\n  import StarRating from './StarRating.svelte'\n\n  //   export let id = '0ac55dd3'\n  export let title = ''\n  export let stars = 0.0\n  export let nrOfRatings = 0\n  export let nrOfComments = 0\n  //   export let images = []\n  export let description = ''\n</script>\n\n<style>\n  .rating {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n  }\n  .starcontainer {\n    flex-grow: 1;\n  }\n\n  .comments {\n    flex-grow: 0;\n  }\n</style>\n\n<div class=\"column is-half content has-text-left {clazz}\">\n\n  <h1>{title}</h1>\n\n  <div class=\"rating\">\n    <div class=\"starcontainer\">\n      <StarRating {stars} {nrOfRatings} />\n    </div>\n    <a href=\"./\" class=\"comments\">\n      {nrOfComments} comment{nrOfComments > 1 ? 's' : ''}\n    </a>\n  </div>\n\n  {@html description}\n\n</div>\n",
    "<script>\r\n  import { Router, Link, Route, router } from 'yrv'\r\n\r\n  import StarRating from './StarRating.svelte'\r\n\r\n  export let id = ''\r\n  export let title = 'Untitled'\r\n  export let image = {\r\n    src: '',\r\n    alt: '',\r\n  }\r\n  export let stars = 0.0\r\n  export let nrOfRatings = 0.0\r\n</script>\r\n\r\n<style>\r\n  .card {\r\n    max-width: 160px;\r\n    min-width: 160px;\r\n  }\r\n  .stars {\r\n    font-size: 0.5rem;\r\n  }\r\n</style>\r\n\r\n<div class=\"card\">\r\n  <Link\r\n    href=\"/{id}\"\r\n    on:click={() => window.scrollTo({ top: 0, left: 0, behavior: 'smooth' })}>\r\n    <div class=\"card-image\">\r\n      <figure class=\"image is-1by1\">\r\n        <img src={image.src} alt={image.alt} />\r\n      </figure>\r\n    </div>\r\n    <div class=\"card-content\">\r\n      <p class=\"title is-6\">{title}</p>\r\n      <div class=\"stars\">\r\n        <StarRating {stars} {nrOfRatings} />\r\n      </div>\r\n      <!-- <div class=\"media\">\r\n      <div class=\"media-left\" />\r\n      <div class=\"media-content\">\r\n        <p class=\"title is-4\">Curabitur a Tortor Nec Lorem Bibendum</p>\r\n        <StarRating />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec\r\n      iaculis mauris.\r\n      <a>@bulmaio</a>\r\n      .\r\n      <a href=\"#\">#css</a>\r\n      <a href=\"#\">#responsive</a>\r\n      <br />\r\n      <time datetime=\"2016-1-1\">11:09 PM - 1 Jan 2016</time>\r\n    </div> -->\r\n    </div>\r\n  </Link>\r\n</div>\r\n",
    "<script>\r\n  import ProductCard from './ProductCard.svelte'\r\n\r\n  let className = ''\r\n  export { className as class }\r\n\r\n  export let products = {}\r\n  const emptyImg = { src: '', alt: '' }\r\n</script>\r\n\r\n<style>\r\n  .root {\r\n    display: flex;\r\n    flex-direction: row;\r\n    overflow-x: auto;\r\n  }\r\n</style>\r\n\r\n<div class=\"root pb-4 {className}\">\r\n  {#each products as p}\r\n    <div class=\"cardwrapper ml-3\">\r\n      <ProductCard\r\n        id={p.id}\r\n        title={p.title}\r\n        stars={p.stars}\r\n        nrOfRatings={p.nrOfRatings}\r\n        image={p.images.length > 0 ? p.images[0] : emptyImg} />\r\n    </div>\r\n  {/each}\r\n</div>\r\n",
    "<script>\n  let clazz = ''\n  export { clazz as class }\n\n  export let nrOfRatings = 0\n  export let stars = 0.0\n\n  //   function starsToBooleanArray(stars) {\n  //     const arr = Array(5).fill(false)\n  //     for (let i = 0; i < stars; i++) {\n  //       arr[i] = true\n  //     }\n  //     return arr\n  //   }\n  $: starsBounded = Math.max(0.0, Math.min(5.0, stars))\n  $: starsStr = starsBounded.toFixed(1)\n  $: nrOfRatingsStr = nrOfRatings.toFixed(0)\n  //   $: starsInt = Math.round(starsBounded)\n  //   $: starsArr = starsToBooleanArray(starsInt)\n</script>\n\n<style>\n  .fullrow {\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n    flex-wrap: wrap;\n  }\n\n  .star {\n    max-height: 1em;\n  }\n\n  /* .nr-of-ratings { } */\n</style>\n\n<div class=\"fullrow {clazz}\">\n\n  <div class=\"mr-2\">\n    <img\n      src=\"./star-{stars > 0.5 ? 'full' : 'empty'}.svg\"\n      alt=\"full star\"\n      class=\"star mr-1\" />\n    <img\n      src=\"./star-{stars > 1.5 ? 'full' : 'empty'}.svg\"\n      class=\"star mr-1\"\n      alt=\"full star\" />\n    <img\n      src=\"./star-{stars > 2.5 ? 'full' : 'empty'}.svg\"\n      class=\"star mr-1\"\n      alt=\"full star\" />\n    <img\n      src=\"./star-{stars > 3.5 ? 'full' : 'empty'}.svg\"\n      class=\"star mr-1\"\n      alt=\"full star\" />\n    <img\n      src=\"./star-{stars > 4.5 ? 'full' : 'empty'}.svg\"\n      class=\"star\"\n      alt=\"full star\" />\n  </div>\n\n  <div>\n    <span class=\"mr-2\">{starsStr}</span>\n    {#if nrOfRatings}\n      <a href=\"./\">({nrOfRatingsStr})</a>\n    {/if}\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAwGE,CAAC,YAAY,CAAC,cAAC,CAAC,AACd,KAAK,CAAE,GAAG,AACZ,CAAC;ACTD,CAAC,YAAY,CAAC,cAAC,CAAC,AACd,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,MAAM,AAC3B,CAAC;ACtED,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;ACpBD,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,UAAU,CAAE,OAAO,CAEnB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CACjE,kBAAkB,CAAE,GAAG,CACvB,eAAe,CAAE,OAAO,CACxB,YAAY,CAAE,OAAO,AACvB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AACxB,CAAC,AACD,MAAM,YAAY,cAAC,CAAC,AAClB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,GAAG,AACnB,CAAC;ACxBD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,UAAU,AACzB,CAAC,AACD,cAAc,cAAC,CAAC,AACd,SAAS,CAAE,CAAC,AACd,CAAC,AAED,SAAS,cAAC,CAAC,AACT,SAAS,CAAE,CAAC,AACd,CAAC;ACXD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,SAAS,CAAE,MAAM,AACnB,CAAC;ACXD,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,UAAU,CAAE,IAAI,AAClB,CAAC;ACOD,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,QAAQ,CACrB,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,GAAG,AACjB,CAAC"
}